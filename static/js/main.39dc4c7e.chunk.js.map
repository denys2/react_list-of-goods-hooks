{"version":3,"sources":["App.tsx","components/GoodCart.tsx","components/GoodList.tsx","index.tsx"],"names":["SortType","GoodCart","good","GoodList","goods","map","goodsFromServer","App","useState","none","sortBy","setSortBy","isReversed","setIsReversed","visiableGoods","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","showResetButton","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0EChBQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SACGA,KCAQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SFFpBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,oBAAAA,E,gBAAAA,E,SAAAA,M,KAuCE,IAAMO,EAAgB,WAC3B,MAA4BC,mBAASR,EAASS,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA/BR,SACEV,EADF,GAGG,IADCM,EACF,EADEA,OAAQE,EACV,EADUA,WAEJG,EAAa,YAAOX,GAqB1B,OAnBIM,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKV,EAASmB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXT,GACFG,EAAcO,UAGTP,EAMeQ,CAAiBjB,EACrC,CAAEI,SAAQE,eAcNY,EAAkBd,GAAUE,EAOlC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAvBmB,WACzBf,EAAUX,EAASmB,WAuBbQ,KAAK,SACLF,UAAWG,IACT,iBAAkB,CAChB,WAAYlB,IAAWV,EAASmB,WALtC,iCAYA,wBACEO,QA/Ba,WACnBf,EAAUX,EAASqB,SA+BbM,KAAK,SACLF,UAAWG,IACT,oBAAqB,CACnB,WAAYlB,IAAWV,EAASqB,SALtC,4BAYA,wBACEK,QAvCc,WACpBb,GAAeD,IAuCTe,KAAK,SACLF,UAAWG,IACT,oBAAqB,CACnB,YAAahB,IALnB,qBAYCY,GACC,wBACEE,QA9CU,WAClBf,EAAUX,EAASS,MACnBI,GAAc,IA6CNc,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,cAAC,EAAD,CAAUrB,MAAOU,QGpIvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39dc4c7e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  none = '',\n}\n\ntype ReorderOptions = {\n  sortBy: SortType,\n  isReversed: boolean,\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortBy, isReversed }: ReorderOptions,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.none);\n  const [isReversed, setIsReversed] = useState(false);\n  const visiableGoods = getPreparedGoods(goodsFromServer,\n    { sortBy, isReversed });\n\n  const sortAlphabetically = () => {\n    setSortBy(SortType.alphabet);\n  };\n\n  const sortByLength = () => {\n    setSortBy(SortType.length);\n  };\n\n  const reversedGoods = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const showResetButton = sortBy || isReversed;\n\n  const resetButton = () => {\n    setSortBy(SortType.none);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortAlphabetically}\n          type=\"button\"\n          className={cn(\n            'button is-info', {\n              'is-light': sortBy !== SortType.alphabet,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={cn(\n            'button is-success', {\n              'is-light': sortBy !== SortType.length,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reversedGoods}\n          type=\"button\"\n          className={cn(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {showResetButton && (\n          <button\n            onClick={resetButton}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visiableGoods} />\n    </div>\n  );\n};\n","type Props = {\n  good: string,\n};\n\nexport const GoodCart: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import { GoodCart } from './GoodCart';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCart good={good} key={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}